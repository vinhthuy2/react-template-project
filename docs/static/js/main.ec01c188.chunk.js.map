{"version":3,"sources":["components/login/Login.module.css","layout/header/Header.module.css","layout/footer/Footer.module.css","layout/content/Content.module.css","App.module.css","components/home/Home.module.css","layout/footer/Footer.js","components/about/About.js","components/login/Login.js","components/signup/Signup.js","components/home/Home.js","routing/PublicRoute.js","routing/PrivateRoute.js","layout/content/Content.js","layout/header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","classes","About","Login","props","useState","username","setUserName","password","setPassword","name","value","onChange","e","target","onClick","preventDefault","axios","post","email","responseType","then","token","localStorage","setItem","data","location","state","from","history","push","catch","err","console","log","Signup","for","Home","PublicRoute","Component","component","restricted","rest","render","to","PrivateRoute","getItem","pathname","Content","path","exact","Header","App","main","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,uBAAuB,UAAY,2B,wCCA5FD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,qBAAqB,WAAa,6B,mBCAjGD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,KAAO,oB,4ECAzBD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,WAAa,2B,mGCU9EC,EARA,WACb,OACE,yBAAKC,UAAWC,UACd,0C,eCJOC,EAAQ,WACnB,OACE,6BACE,uC,iCCkDSC,EAnDD,SAAAC,GAAU,IAAD,EACWC,mBAAS,IADpB,mBACdC,EADc,KACJC,EADI,OAEWF,mBAAS,IAFpB,mBAEdG,EAFc,KAEJC,EAFI,KA4BrB,OACE,yBAAKT,UAAWC,aACd,0BAAMD,UAAWC,SACf,2CACA,2BACES,KAAK,WACLC,MAAOL,EACPM,SAAU,SAAAC,GAAC,OAAIN,EAAYM,EAAEC,OAAOH,UAEtC,4CACA,2BACED,KAAK,WACLC,MAAOH,EACPI,SAAU,SAAAC,GAAC,OAAIJ,EAAYI,EAAEC,OAAOH,UAEtC,yBAAKX,UAAWC,WACd,4BAAQc,QAzCK,SAAAF,GACnBA,EAAEG,iBACFC,IACGC,KACC,uCACA,CACEC,MAAOb,EACPE,SAAUA,GAEZ,CAAEY,aAAc,qBAEjBC,MAAK,SAAAC,GACJC,aAAaC,QAAQ,QAASF,EAAMG,KAAKH,OACrClB,EAAMsB,SAASC,OAASvB,EAAMsB,SAASC,MAAMC,KAC/CxB,EAAMyB,QAAQC,KAAK1B,EAAMsB,SAASC,MAAMC,MAExCxB,EAAMyB,QAAQC,KAAK,QAGtBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAsBtB,SACA,4BAAQjB,QApBM,SAAAF,GACpBA,EAAEG,mBAmBI,c,QChCKmB,EAfA,WACb,OACE,yBAAKnC,UAAWC,aACd,0BAAMD,UAAWC,SACf,2BAAOmC,IAAI,YAAX,YACA,2BAAO1B,KAAK,aACZ,2BAAO0B,IAAI,YAAX,aACA,2BAAO1B,KAAK,aACZ,yBAAKV,UAAWC,WACd,8CCAKoC,G,MARF,WACX,OACC,6BACE,sD,QCHQC,EAAc,SAAC,GAAmD,IAAtCC,EAAqC,EAAhDC,UAAsBC,EAA0B,EAA1BA,WAAeC,EAAW,0CAE5E,OADAT,QAAQC,IAAIQ,GAEV,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAvC,GAEN,OADA6B,QAAQC,IAAI9B,GACLqC,EAAa,kBAAC,IAAD,CAAUG,GAAG,MAAS,kBAACL,EAAcnC,QCPpDyC,EAAe,SAAC,GAAuC,IAA1BN,EAAyB,EAApCC,UAAyBE,EAAW,6BAGjE,OAFAT,QAAQC,IAAIQ,GAGV,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAvC,GAAK,OACXmB,aAAauB,QAAQ,SACnB,kBAACP,EAAcnC,GAEf,kBAAC,IAAD,CACEwC,GAAI,CAAEG,SAAU,SAAUpB,MAAO,CAAEC,KAAMxB,EAAMsB,kBCS5CsB,EAdC,WACd,OACE,yBAAKhD,UAAWC,WACd,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAagD,KAAK,SAASR,YAAY,EAAOD,UAAWrC,IACzD,kBAAC,EAAD,CAAc8C,KAAK,SAAST,UAAWtC,IACvC,kBAAC,IAAD,CAAO+C,KAAK,UAAUT,UAAWL,IACjC,kBAAC,IAAD,CAAOc,KAAK,QAAQT,UAAWH,IAC/B,kBAAC,IAAD,CAAUY,KAAK,IAAIC,OAAK,EAACN,GAAG,a,QCQrBO,EAtBA,WACb,OACE,yBAAKnD,UAAWC,aACd,6BACE,yBAAKD,UAAWC,QACd,qCAEF,yBAAKD,UAAWC,cACd,4BACE,kBAAC,IAAD,CAAM2C,GAAG,SACP,qCAEF,kBAAC,IAAD,CAAMA,GAAG,UACP,2C,iBCECQ,MAZf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKpD,UAAWC,IAAQoD,MACtB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCAYC,QACW,cAA7BC,OAAO7B,SAAS8B,UAEe,UAA7BD,OAAO7B,SAAS8B,UAEhBD,OAAO7B,SAAS8B,SAASC,MACvB,2DCZNC,IAASf,OAAO,kBAAC,EAAD,MAASgB,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1C,MAAK,SAAA2C,GACJA,EAAaC,gBAEdlC,OAAM,SAAAmC,GACLjC,QAAQiC,MAAMA,EAAMC,c","file":"static/js/main.ec01c188.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1O0S4\",\"actions\":\"Login_actions__31kr9\",\"container\":\"Login_container__VNkob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__22lGd\",\"logo\":\"Header_logo__3WY8w\",\"navigation\":\"Header_navigation__17xxw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1988I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__fG34v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__11O6M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__3L1u6\",\"logo\":\"Home_logo__jljpO\",\"navigation\":\"Home_navigation__3q6hb\"};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as classes from './Footer.module.css';\r\nconst Footer = () => {\r\n  return (\r\n    <div className={classes.footer}>\r\n      <span>Footer</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div>\r\n      <h1>ABOUT</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport * as classes from './Login.module.css';\r\nimport axios from 'axios';\r\n\r\nconst Login = props => {\r\n  const [username, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const onLoginClick = e => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        'http://localhost:3001/api/user/login',\r\n        {\r\n          email: username,\r\n          password: password\r\n        },\r\n        { responseType: 'application/json' }\r\n      )\r\n      .then(token => {\r\n        localStorage.setItem('token', token.data.token);\r\n        if (props.location.state && props.location.state.from) {\r\n          props.history.push(props.location.state.from);\r\n        } else {\r\n          props.history.push('/');\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const onSignupClick = e => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <div className={classes.container}>\r\n      <form className={classes.login}>\r\n        <label>Username</label>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={e => setUserName(e.target.value)}\r\n        />\r\n        <label>Passwrord</label>\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <div className={classes.actions}>\r\n          <button onClick={onLoginClick}>Login</button>\r\n          <button onClick={onSignupClick}>Signup</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import React from \"react\";\r\nimport * as classes from \"./Signup.module.css\";\r\nconst Signup = () => {\r\n  return (\r\n    <div className={classes.container}>\r\n      <form className={classes.login}>\r\n        <label for=\"username\">Username</label>\r\n        <input name=\"username\" />\r\n        <label for=\"password\">Passwrord</label>\r\n        <input name=\"password\" />\r\n        <div className={classes.actions}>\r\n          <button>Signup</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as classes from \"./Home.module.css\";\r\nconst Home = () => {\r\n  return (\r\n   <div>\r\n     <h1>Welcome to our Home</h1>\r\n   </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PublicRoute = ({ component: Component, restricted, ...rest }) => {\r\n  console.log(rest);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        console.log(props);\r\n        return restricted ? <Redirect to=\"/\" /> : <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  console.log(rest);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        localStorage.getItem(\"token\") ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link, Switch, Route, Redirect } from 'react-router-dom';\r\nimport * as classes from './Content.module.css';\r\nimport { About } from '../../components/about/About';\r\nimport Login from '../../components/login/Login';\r\nimport Signup from '../../components/signup/Signup';\r\nimport Home from '../../components/home/Home';\r\nimport { PublicRoute } from '../../routing/PublicRoute';\r\nimport { PrivateRoute } from '../../routing/PrivateRoute';\r\nconst Content = () => {\r\n  return (\r\n    <div className={classes.content}>\r\n      <Switch>\r\n        <PublicRoute path=\"/login\" restricted={false} component={Login} />\r\n        <PrivateRoute path=\"/about\" component={About}></PrivateRoute>\r\n        <Route path=\"/signup\" component={Signup} />\r\n        <Route path=\"/home\" component={Home}></Route>\r\n        <Redirect path=\"/\" exact to=\"/home\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as classes from './Header.module.css';\r\nconst Header = () => {\r\n  return (\r\n    <div className={classes.container}>\r\n      <nav>\r\n        <div className={classes.logo}>\r\n          <h2>Logo</h2>\r\n        </div>\r\n        <div className={classes.navigation}>\r\n          <ul>\r\n            <Link to=\"/home\">\r\n              <li>Home</li>\r\n            </Link>\r\n            <Link to=\"/about\">\r\n              <li>About</li>\r\n            </Link>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Footer from './layout/footer/Footer';\r\nimport Content from './layout/content/Content';\r\nimport Header from './layout/header/Header';\r\nimport classes from './App.module.css';\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className={classes.main}>\r\n        <Header></Header>\r\n        <Content></Content>\r\n        <Footer></Footer>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}